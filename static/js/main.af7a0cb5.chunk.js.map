{"version":3,"sources":["Common/Helpers/ApiHelper.js","Infraestructure/Repositories/PersonagensRepository.js","Infraestructure/Ducks/PersonagensDuck.js","Infraestructure/Services/PersonagensService.js","Infraestructure/Ducks/rootReducer.js","Config/Store.js","App/Personagens/Personagem/index.js","App/Personagens/Personagem/Personagem.js","App/Personagens/Personagens.js","App/Personagens/index.js","App/App.js","App/index.js","index.js"],"names":["API_URL","PersonagensRepository","routePrefix","this","baseUrl","url","axios","get","personagensService","personagensRepository","listarPersonagens","data","Promise","resolve","reject","INITIAL_STATE","lastUpdateDateTime","loading","success","error","LISTAR_PERSONAGENS_INICIADO","LISTAR_PERSONAGENS_SUCESSO","LISTAR_PERSONAGENS_ERRO","listarPersonagensSucesso","type","reducer","state","action","moment","toISOString","reducers","personagens","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","Personagem","obterOcupacao","ocupacoes","ocupacao","i","length","personagem","props","className","char_id","src","img","width","height","alt","name","style","backgroundColor","status","birthday","occupation","Component","Personagens","componentDidMount","a","setState","listaPersonagens","componentDidUpdate","prevProps","valorBusca","valor","listaPersonagensFiltrada","filter","p","toUpperCase","includes","id","value","onChange","handleChange","target","placeholder","map","defaultProps","connect","dispatch","App","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","persistor","persistStore","configureStore","require","locale","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.af7a0cb5.chunk.js","sourcesContent":["export const API_URL = \"https://www.breakingbadapi.com/api\"\r\n\r\nexport default null;\r\n","import axios from \"axios\";\r\nimport { API_URL } from \"../../Common/Helpers/ApiHelper\";\r\n\r\nclass PersonagensRepository {\r\n  constructor({ routePrefix = API_URL} = {}) {\r\n    this.baseUrl = `${routePrefix}/characters`;\r\n  }\r\n\r\n  listarPersonagens() {    \r\n    const url = `${this.baseUrl}`;\r\n    return axios.get(url, {});\r\n  }\r\n}\r\n\r\nexport default PersonagensRepository;\r\n","import moment from \"moment\";\r\n\r\nimport PersonagensService from \"../Services/PersonagensService\";\r\n\r\nconst personagensService = new PersonagensService();\r\n\r\nexport const DUCK_NAME = \"personagens\";\r\n\r\nexport const INITIAL_STATE = {\r\n  lastUpdateDateTime: null,\r\n  loading: false,\r\n  success: false,\r\n  error: null,\r\n  data: []\r\n};\r\n\r\nexport const LISTAR_PERSONAGENS_INICIADO = `${DUCK_NAME}/LISTAR_PERSONAGENS_INICIADO`;\r\nexport const LISTAR_PERSONAGENS_SUCESSO = `${DUCK_NAME}/LISTAR_PERSONAGENS_SUCESSO`;\r\nexport const LISTAR_PERSONAGENS_ERRO = `${DUCK_NAME}/LISTAR_PERSONAGENS_ERRO`;\r\n\r\nexport const listarPersonagensIniciado = () => ({\r\n  type: LISTAR_PERSONAGENS_INICIADO\r\n});\r\nexport const listarPersonagensSucesso = data => ({\r\n  type: LISTAR_PERSONAGENS_SUCESSO,\r\n  data\r\n});\r\nexport const listarPersonagensErro = error => ({\r\n  type: LISTAR_PERSONAGENS_ERRO,\r\n  error\r\n});\r\n\r\nexport const listarPersonagens = () => async dispatch => {\r\n  dispatch(listarPersonagensIniciado());\r\n  try {\r\n    const data = await personagensService.listarPersonagens();\r\n    dispatch(listarPersonagensSucesso(data));\r\n  } catch (error) {\r\n    dispatch(listarPersonagensErro(error));\r\n  }\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action = { type: null }) => {\r\n  switch (action.type) {\r\n  case LISTAR_PERSONAGENS_INICIADO:\r\n    return {\r\n      ...state,\r\n      loading: true,\r\n      error: null,\r\n      success: false,\r\n      data: []\r\n    };\r\n  case LISTAR_PERSONAGENS_SUCESSO:\r\n    return {\r\n      ...state,\r\n      lastUpdateDateTime: moment().toISOString(),\r\n      loading: false,\r\n      success: true,\r\n      error: null,\r\n      data: [...action.data]\r\n    };\r\n  case LISTAR_PERSONAGENS_ERRO:\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n      success: false,\r\n      error: action.error,\r\n      data: []\r\n    };\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import PersonagensRepository from \"../Repositories/PersonagensRepository\";\r\n\r\nclass PersonagensService {\r\n  constructor(personagensRepository = new PersonagensRepository()) {\r\n    this.personagensRepository = personagensRepository;\r\n  }\r\n\r\n  async listarPersonagens() {\r\n    try {\r\n      const { data } = await this.personagensRepository.listarPersonagens();\r\n      return Promise.resolve(data);\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport default PersonagensService;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport personagens, { DUCK_NAME as LISTAR_PERSONAGENS } from \"./PersonagensDuck\";\r\n\r\nconst reducers = {\r\n  [LISTAR_PERSONAGENS]: personagens,\r\n};\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport rootReducer from '../Infraestructure/Ducks/rootReducer'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default () => {\r\n  const store = createStore(\r\n    persistedReducer,\r\n    composeWithDevTools(\r\n      applyMiddleware(\r\n        thunkMiddleware,\r\n      )),\r\n  )\r\n\r\n  const persistor = persistStore(store);\r\n\r\n  return { store, persistor }\r\n}\r\n","import Personagem from './Personagem';\r\n\r\nexport default Personagem;","import React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport './Personagem.scss';\r\n\r\nclass Personagem extends Component {\r\n\r\n  obterOcupacao = (ocupacoes) => {\r\n    let ocupacao = \"\";\r\n    for (let i = 0; i < ocupacoes.length; i++) {\r\n      if (i !== 0)\r\n        ocupacao = `${ocupacao}, `;\r\n      ocupacao = `${ocupacao} ${ocupacoes[i]}`;\r\n    }\r\n    return ocupacao;\r\n  }\r\n\r\n  render() {\r\n    const { personagem } = this.props;\r\n\r\n    return (\r\n      <div className=\"personagem\" key={personagem.char_id}>\r\n        <img src={personagem.img} width=\"100%\" height=\"100%\" alt={personagem.name} />\r\n        <div className=\"dados\">\r\n          <div className=\"status\">\r\n            <div className=\"etiqueta\" style={{ backgroundColor: personagem.status === 'Alive' ? '#008B45' : '#EE7600' }}>\r\n              {personagem.status}\r\n            </div>\r\n          </div>\r\n          <div className=\"info\">\r\n            <div className=\"nome\">{personagem.name}</div>\r\n            <div className=\"data-nascimento\">★ {personagem.birthday}</div>\r\n            <div className=\"ocupacao\">{this.obterOcupacao(personagem.occupation)}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPersonagem.propTypes = {\r\n  personagem: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Personagem\r\n","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport Personagem from './Personagem'\n\nimport './Personagens.scss';\n\nclass Personagens extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      listaPersonagens: null,\n      valorBusca: \"\"\n    };\n  }\n\n  componentDidMount = async () => {\n    const { listarPersonagens, personagens } = this.props;\n    if (!personagens.loading) {\n      await listarPersonagens();\n    }\n    this.setState({\n      listaPersonagens: personagens.data\n    });\n  };\n\n  componentDidUpdate = (prevProps) => {\n    const { personagens } = this.props;\n    if (prevProps.personagens.loading && personagens.success) {\n\n      this.setState({\n        listaPersonagens: personagens.data\n      });\n    };\n  }\n\n  handleChange(valor) {\n    const { personagens } = this.props;\n\n    this.setState({ valorBusca: valor });\n    const listaPersonagensFiltrada = personagens.data.filter(p => p.name.toUpperCase().includes(valor.toUpperCase()));\n    this.setState({ listaPersonagens: listaPersonagensFiltrada });\n  }\n\n  render() {\n    const { listaPersonagens, valorBusca } = this.state;\n    return (\n      <div className=\"Personagens\">\n        <div className=\"cabecalho\">\n          <img\n            src=\"https://yt3.ggpht.com/a/AGF-l79rcSfCz8vufHWw5DP4cTMYGvBpu135UlyfWw=s900-c-k-c0xffffffff-no-rj-mo\"\n            width=\"150\"\n            height=\"150\"\n            alt=\"logo\" />\n\n          <div className=\"busca\">\n            <input\n              id=\"input-busca\"\n              type=\"search\"\n              value={valorBusca}\n              onChange={(value) => this.handleChange(value.target.value)}\n              placeholder=\"Pesquise os personagens\"\n            />\n          </div>\n        </div>\n        <div className=\"lista-personagens\">\n          <div className=\"titulo\">\n            {valorBusca ? `Você pesquisou por \"${valorBusca}\"` : 'Personagens'}\n          </div>\n          <div className=\"lista\">\n            {listaPersonagens && listaPersonagens.map(\n              personagem => <Personagem personagem={personagem} key={personagem.char_id} />\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nPersonagens.propTypes = {\n  listarPersonagens: PropTypes.func.isRequired,\n  personagens: PropTypes.object,\n}\n\nPersonagens.defaultProps = {\n  personagens: {}\n}\n\nexport default Personagens\n","import { connect } from \"react-redux\";\r\nimport Personagens from './Personagens';\r\nimport { listarPersonagens } from '../../Infraestructure/Ducks/PersonagensDuck';\r\n\r\nexport const mapStateToProps = state => {\r\n    const { personagens } = state;\r\n    return { personagens };\r\n};\r\n\r\nexport const mapDispatchToProps = dispatch => ({\r\n    listarPersonagens: () => {\r\n        dispatch(listarPersonagens())\r\n    },\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Personagens);","import React from 'react';\r\nimport './App.scss';\r\nimport Personagens from './Personagens';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Personagens />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"moment/locale/pt-br\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/es/integration/react\";\r\n\r\nimport configureStore from \"./Config/Store\";\r\n\r\nimport App from \"./App/index\";\r\n\r\nimport \"./index.scss\";\r\n\r\nconst { persistor, store } = configureStore();\r\n\r\nconst moment = require(\"moment\");\r\n\r\nmoment.locale('pt-br')\r\n\r\nconst render = (target) => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <PersistGate loading={<div>loading...</div>} persistor={persistor}>\r\n                <App />\r\n            </PersistGate>\r\n        </Provider>,\r\n        target\r\n    );\r\n};\r\n\r\nrender(document.getElementById(\"root\"), \"pt-br\");\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n\r\n\r\n"],"sourceRoot":""}